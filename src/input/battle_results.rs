use std::collections::HashMap;
use serde_derive::Deserialize;
use serde_derive::Serialize;
use serde_json::Value;

// Generated by https://transform.tools/json-to-rust-serde

pub type BattlesResults = Vec<BattleResults>;

pub type Vehicle = Vec<VehicleEarning>;

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BattleResults {
    pub personal: Option<Personal>,
    pub players: Option<HashMap<String, PlayerNameInfo>>,
    pub vehicles: Option<HashMap<String, Vehicle>>,
    pub common: Option<Common>,
    #[serde(rename = "arenaUniqueID")]
    pub arena_unique_id: Option<i64>,
    pub avatars: Option<HashMap<String, Avatar>>,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Personal {
    pub avatar: CurrentPlayerEarnings,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct N49 {
    pub event_event_coin_list: Vec<Value>,
    pub veh_type_lock_time: i64,
    pub event_bpcoin_list: Vec<Value>,
    pub stunned: i64,
    #[serde(rename = "factualFreeXP")]
    pub factual_free_xp: i64,
    pub credits_to_draw: i64,
    #[serde(rename = "orderFreeXPFactor100")]
    pub order_free_xpfactor100: i64,
    #[serde(rename = "orderXPFactor100")]
    pub order_xpfactor100: i64,
    pub damage_assisted_radio: i64,
    pub stun_duration: f64,
    #[serde(rename = "freeXPReplay")]
    pub free_xpreplay: Value,
    pub original_prem_squad_credits: i64,
    pub win_points: i64,
    #[serde(rename = "xp/other")]
    pub xp_other: i64,
    pub credits_contribution_in: i64,
    #[serde(rename = "premiumTmenXPFactor100")]
    pub premium_tmen_xpfactor100: i64,
    pub event_credits: i64,
    pub piggy_bank: i64,
    pub auto_equip_boosters_cost: Vec<i64>,
    #[serde(rename = "achievementXP")]
    pub achievement_xp: i64,
    #[serde(rename = "igrXPFactor10")]
    pub igr_xpfactor10: i64,
    pub premium_credits_factor100: i64,
    pub destructible_deaths: Vec<Value>,
    pub original_credits_contribution_in: i64,
    pub win_alone_against_vehicle_count: i64,
    pub original_credits_penalty: i64,
    pub damaged_while_moving: i64,
    pub death_reason: i64,
    pub kills: i64,
    #[serde(rename = "eventTMenXP")]
    pub event_tmen_xp: i64,
    pub percent_from_total_team_damage: f64,
    #[serde(rename = "premiumPlusXPFactor100")]
    pub premium_plus_xpfactor100: i64,
    pub bpcoin: i64,
    pub original_gold: i64,
    pub mark_of_mastery: i64,
    pub no_damage_direct_hits_received: i64,
    pub equipment_damage_dealt: i64,
    #[serde(rename = "premiumPlusTmenXPFactor100")]
    pub premium_plus_tmen_xpfactor100: i64,
    pub booster_credits: i64,
    #[serde(rename = "originalTMenXP")]
    pub original_tmen_xp: i64,
    #[serde(rename = "eventFreeXPList")]
    pub event_free_xplist: Vec<Value>,
    pub tkills: i64,
    pub moving_avg_damage: i64,
    pub shots: i64,
    pub team: i64,
    #[serde(rename = "referral20Credits")]
    pub referral20credits: i64,
    pub death_count: i64,
    pub dossier_log_records: Vec<(i64, Value)>,
    #[serde(rename = "referral20XP")]
    pub referral20xp: i64,
    pub stun_num: i64,
    pub spotted: i64,
    pub original_crystal: i64,
    #[serde(rename = "killerID")]
    pub killer_id: i64,
    pub gold: i64,
    pub bpcoin_replay: Value,
    pub booster_credits_factor100: i64,
    pub damaged_hp: i64,
    #[serde(rename = "referral20XPFactor100")]
    pub referral20xpfactor100: i64,
    pub currencies: Value,
    #[serde(rename = "premiumVehicleXPFactor100")]
    pub premium_vehicle_xpfactor100: i64,
    pub auto_load_cost: Vec<i64>,
    #[serde(rename = "additionalXPFactor10")]
    pub additional_xpfactor10: i64,
    pub event_bpcoin: i64,
    pub subtotal_crystal: i64,
    pub killed_and_damaged_by_all_squadmates: i64,
    #[serde(rename = "eventFreeXP")]
    pub event_free_xp: i64,
    #[serde(rename = "xp/attack")]
    pub xp_attack: i64,
    #[serde(rename = "eventGoldFactor100List")]
    pub event_gold_factor100list: Vec<Value>,
    pub in_battle_achievements: Vec<Value>,
    pub credits_contribution_out: i64,
    pub direct_enemy_hits: i64,
    pub original_credits_contribution_out_squad: i64,
    pub damage_event_list: Value,
    pub premium_plus_credits_factor100: i64,
    pub damage_received: i64,
    pub health: i64,
    pub stop_respawn: bool,
    pub mileage: i64,
    pub achievements: Vec<i64>,
    #[serde(rename = "orderFreeXP")]
    pub order_free_xp: i64,
    pub event_gold_list: Vec<Value>,
    #[serde(rename = "boosterTMenXPFactor100")]
    pub booster_tmen_xpfactor100: i64,
    pub dossier_pop_ups: Vec<(i64, Value)>,
    pub is_first_blood: bool,
    pub setups_indexes: SetupsIndexes,
    pub resource_absorbed: i64,
    pub gold_replay: Value,
    pub committed_suicide: bool,
    pub artillery_fort_equip_damage_dealt: i64,
    #[serde(rename = "eventTMenXPList")]
    pub event_tmen_xplist: Vec<Value>,
    pub auto_equip_cost: Vec<i64>,
    pub tdamage_dealt: i64,
    #[serde(rename = "eventTMenXPFactor100List")]
    pub event_tmen_xpfactor100list: Vec<(String, i64)>,
    pub xp_replay: Value,
    pub destructibles_hits: i64,
    #[serde(rename = "eventXP")]
    pub event_xp: i64,
    pub damaged_while_enemy_moving: i64,
    pub potential_damage_received: i64,
    pub damage_dealt: i64,
    pub destructibles_num_destroyed: i64,
    pub destructibles_damage_dealt: i64,
    pub explosion_hits: i64,
    #[serde(rename = "boosterXP")]
    pub booster_xp: i64,
    pub marks_on_gun: i64,
    pub direct_hits: i64,
    pub c11n_progress: HashMap<String, C11nProgress>,
    #[serde(rename = "flXPReplay")]
    pub fl_xpreplay: Value,
    pub damage_rating: i64,
    pub repair: i64,
    pub original_credits: i64,
    #[serde(rename = "playerRankXPFactor100")]
    pub player_rank_xpfactor100: i64,
    pub damage_assisted_track: i64,
    pub xp_penalty: i64,
    #[serde(rename = "referral20CreditsFactor100")]
    pub referral20credits_factor100: i64,
    pub aogas_factor10: i64,
    pub xp_by_tmen: Vec<Vec<i64>>,
    pub sniper_damage_dealt: i64,
    pub fairplay_factor10: i64,
    #[serde(rename = "subtotalTMenXP")]
    pub subtotal_tmen_xp: i64,
    pub damage_blocked_by_armor: i64,
    pub xp: i64,
    #[serde(rename = "boosterXPFactor100")]
    pub booster_xpfactor100: i64,
    pub damage_received_from_invisibles: i64,
    #[serde(rename = "refSystemXPFactor10")]
    pub ref_system_xpfactor10: i64,
    #[serde(rename = "orderTMenXP")]
    pub order_tmen_xp: i64,
    pub flag_actions: Vec<i64>,
    #[serde(rename = "originalXPPenalty")]
    pub original_xppenalty: i64,
    #[serde(rename = "orderTMenXPFactor100")]
    pub order_tmen_xpfactor100: i64,
    pub num_recovered: i64,
    pub applied_premium_credits_factor100: i64,
    pub max_health: i64,
    pub damaged: i64,
    pub direct_team_hits: i64,
    pub event_crystal_list: Vec<(String, i64)>,
    pub prem_squad_credits_factor100: i64,
    #[serde(rename = "subtotalXP")]
    pub subtotal_xp: i64,
    #[serde(rename = "squadXP")]
    pub squad_xp: i64,
    pub prem_mask: i64,
    #[serde(rename = "playerRankXP")]
    pub player_rank_xp: i64,
    #[serde(rename = "originalFreeXP")]
    pub original_free_xp: i64,
    pub order_credits: i64,
    #[serde(rename = "xp/assist")]
    pub xp_assist: i64,
    #[serde(rename = "freeXP")]
    pub free_xp: i64,
    #[serde(rename = "orderXP")]
    pub order_xp: i64,
    #[serde(rename = "premiumVehicleXP")]
    pub premium_vehicle_xp: i64,
    pub flag_capture: i64,
    #[serde(rename = "tmenXP")]
    pub tmen_xp: i64,
    pub event_gold: i64,
    pub quests_progress: Value,
    #[serde(rename = "premiumXPFactor100")]
    pub premium_xpfactor100: i64,
    pub solo_flag_capture: i64,
    pub original_credits_contribution_in_squad: i64,
    pub prev_mark_of_mastery: i64,
    pub factual_credits: i64,
    pub event_coin: i64,
    #[serde(rename = "subtotalFreeXP")]
    pub subtotal_free_xp: i64,
    pub crystal: i64,
    pub crystal_replay: Value,
    #[serde(rename = "originalXP")]
    pub original_xp: i64,
    pub original_credits_to_draw_squad: i64,
    pub num_defended: i64,
    #[serde(rename = "achievementFreeXP")]
    pub achievement_free_xp: i64,
    pub piercings: i64,
    pub kills_before_team_was_damaged: i64,
    #[serde(rename = "boosterTMenXP")]
    pub booster_tmen_xp: i64,
    pub credits_penalty: i64,
    pub vehicle_num_captured: i64,
    pub prem_squad_credits: i64,
    pub entity_captured: Value,
    pub life_time: i64,
    pub piercings_received: i64,
    #[serde(rename = "appliedPremiumTmenXPFactor100")]
    pub applied_premium_tmen_xpfactor100: i64,
    pub percent_from_second_best_damage: f64,
    pub piercing_enemy_hits: i64,
    pub credits_replay: Value,
    pub subtotal_bpcoin: i64,
    pub subtotal_credits: i64,
    #[serde(rename = "eventFreeXPFactor100List")]
    pub event_free_xpfactor100list: Vec<Value>,
    #[serde(rename = "serviceProviderID")]
    pub service_provider_id: i64,
    pub dropped_capture_points: i64,
    pub event_event_coin: i64,
    pub direct_hits_received: i64,
    pub type_comp_descr: i64,
    pub order_credits_factor100: i64,
    pub capture_points: i64,
    pub damage_before_team_was_damaged: i64,
    #[serde(rename = "factualXP")]
    pub factual_xp: i64,
    pub explosion_hits_received: i64,
    pub details: HashMap<String, PlayerScore>,
    #[serde(rename = "eventXPFactor100List")]
    pub event_xpfactor100list: Vec<Value>,
    #[serde(rename = "squadXPFactor100")]
    pub squad_xpfactor100: i64,
    pub achievement_credits: i64,
    pub original_credits_to_draw: i64,
    pub is_premium: bool,
    pub original_credits_contribution_out: i64,
    pub subtotal_event_coin: i64,
    pub rollouts_count: i64,
    pub index: i64,
    pub avatar_damage_event_list: Value,
    pub subtotal_gold: i64,
    pub original_event_coin: i64,
    #[serde(rename = "accountDBID")]
    pub account_dbid: i64,
    pub event_crystal: i64,
    #[serde(rename = "tmenXPReplay")]
    pub tmen_xpreplay: Value,
    pub tdestroyed_modules: i64,
    pub event_coin_replay: Value,
    pub auto_repair_cost: i64,
    #[serde(rename = "eventCreditsFactor100List")]
    pub event_credits_factor100list: Vec<Value>,
    pub is_team_killer: bool,
    pub event_credits_list: Vec<Value>,
    #[serde(rename = "eventXPList")]
    pub event_xplist: Vec<Value>,
    pub capturing_base: Value,
    pub damage_assisted_stun: i64,
    pub poi_captured_by_own_team: i64,
    pub original_credits_penalty_squad: i64,
    #[serde(rename = "boosterFreeXPFactor100")]
    pub booster_free_xpfactor100: i64,
    pub damage_assisted_smoke: i64,
    #[serde(rename = "dailyXPFactor10")]
    pub daily_xpfactor10: i64,
    #[serde(rename = "boosterFreeXP")]
    pub booster_free_xp: i64,
    #[serde(rename = "appliedPremiumXPFactor100")]
    pub applied_premium_xpfactor100: i64,
    pub credits: i64,
    pub damage_assisted_inspire: i64,
    pub original_bpcoin: i64,
    pub battle_num: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SetupsIndexes {
    #[serde(rename = "1")]
    pub n1: i64,
    #[serde(rename = "2")]
    pub n2: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct C11nProgress {
    pub progress: Value,
    pub level: i64,
}


#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wgssa55939Q06 {
    pub bonus_count: Option<i64>,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Dq6374bc35QuestBonusC4145REtt1R47125R41065000 {
    pub bonus_count: i64,
    pub battles_count: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PremAccQ03 {
    pub bonus_count: i64,
    pub kills: f64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Wgssa55939Q01 {
    pub bonus_count: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlayerScore {
    pub spotted: i64,
    pub crits: i64,
    pub damage_assisted_track: i64,
    pub damage_assisted_stun: i64,
    pub fire: i64,
    pub death_reason: i64,
    pub piercings: i64,
    pub direct_enemy_hits: i64,
    pub damage_dealt: i64,
    pub damage_assisted_smoke: i64,
    pub piercing_enemy_hits: i64,
    pub damage_assisted_radio: i64,
    pub rickochets_received: i64,
    pub stun_duration: f64,
    pub damage_received: i64,
    pub explosion_hits: i64,
    pub damage_blocked_by_armor: i64,
    pub no_damage_direct_hits_received: i64,
    pub target_kills: i64,
    pub stun_num: i64,
    pub damage_assisted_inspire: i64,
    pub direct_hits: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CurrentPlayerEarnings {
    pub base_points_diff: i64,
    pub gold_bank_gain: i64,
    pub avatar_damaged: i64,
    pub bpcoin_replay: Value,
    pub credits_replay: Value,
    #[serde(rename = "freeXPReplay")]
    pub free_xpreplay: Value,
    pub sum_points: i64,
    pub xp: i64,
    pub fairplay_violations: Vec<i64>,
    pub badges: Vec<Vec<i64>>,
    pub avatar_kills: i64,
    pub event_event_coin: i64,
    pub event_credits: i64,
    pub xp_replay: Value,
    pub progressive_reward: Value,
    #[serde(rename = "eventTMenXP")]
    pub event_tmen_xp: i64,
    pub damage_event_list: Value,
    pub eligible_for_crystal_rewards: bool,
    pub dog_tags: DogTags,
    pub is_premature_leave: Option<bool>,
    pub squad_bonus_info: Value,
    pub winner_if_draw: i64,
    pub event_crystal: i64,
    #[serde(rename = "replayURL")]
    pub replay_url: String,
    #[serde(rename = "freeXP")]
    pub free_xp: i64,
    pub active_rents: Value,
    #[serde(rename = "eventFreeXP")]
    pub event_free_xp: i64,
    pub avatar_damage_dealt: i64,
    pub avatar_damage_event_list: Value,
    #[serde(rename = "PM2Progress")]
    pub pm2progress: HashMap<String, Pm2Progress>,
    pub has_battle_pass: bool,
    #[serde(rename = "accountDBID")]
    pub account_dbid: i64,
    pub gold_replay: Value,
    #[serde(rename = "recruitsIDs")]
    pub recruits_ids: Vec<Value>,
    pub event_gold: i64,
    #[serde(rename = "tmenXPReplay")]
    pub tmen_xpreplay: Value,
    pub event_coin_replay: Value,
    pub quests_progress: Value,
    pub total_damaged: i64,
    pub avatar_ammo: Vec<Value>,
    #[serde(rename = "fareTeamXPPosition")]
    pub fare_team_xpposition: i64,
    pub player_rank: i64,
    pub watched_battle_to_the_end: bool,
    #[serde(rename = "eventXP")]
    pub event_xp: i64,
    pub vse_battle_results: Value,
    pub referral_bonus_vehicles: Vec<i64>,
    #[serde(rename = "recruiterID")]
    pub recruiter_id: i64,
    pub bp_non_chapter_points_diff: i64,
    pub crystal: i64,
    pub crystal_replay: Value,
    pub rank_change: i64,
    pub event_bpcoin: i64,
    pub team: i64,
    #[serde(rename = "clanDBID")]
    pub clan_dbid: i64,
    pub credits: i64,
    #[serde(rename = "fortClanDBIDs")]
    pub fort_clan_dbids: Vec<Value>,
    #[serde(rename = "flXPReplay")]
    pub fl_xpreplay: Value,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct DogTags {
    pub unlocked_comps: Vec<Value>,
    pub upgraded_comps: Vec<Value>,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Pm2Progress {
    pub current: Value,
    pub was_failed: Vec<Value>,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct BattlesSeries {
    pub battles: Vec<bool>,
    pub state: i64,
    pub goal: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PlayerNameInfo {
    pub igr_type: i64,
    pub clan_abbrev: String,
    #[serde(rename = "clanDBID")]
    pub clan_dbid: i64,
    pub real_name: String,
    pub team: i64,
    #[serde(rename = "prebattleID")]
    pub prebattle_id: i64,
    pub name: String,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VehicleEarning {
    pub spotted: i64,
    pub vehicle_num_captured: i64,
    pub damage_assisted_track: i64,
    pub xp_penalty: i64,
    pub direct_team_hits: i64,
    pub damage_dealt: i64,
    pub life_time: i64,
    pub piercings_received: i64,
    pub sniper_damage_dealt: i64,
    pub destructible_deaths: Vec<Value>,
    pub piercing_enemy_hits: i64,
    pub damage_assisted_radio: i64,
    pub mileage: i64,
    pub stun_duration: f64,
    pub piercings: i64,
    pub damage_blocked_by_armor: i64,
    pub xp: i64,
    pub dropped_capture_points: i64,
    #[serde(rename = "killerID")]
    pub killer_id: i64,
    #[serde(rename = "xp/other")]
    pub xp_other: i64,
    pub index: i64,
    pub direct_hits_received: i64,
    pub damage_received_from_invisibles: i64,
    pub explosion_hits_received: i64,
    #[serde(rename = "achievementXP")]
    pub achievement_xp: i64,
    pub death_reason: i64,
    pub capture_points: i64,
    pub num_recovered: i64,
    pub direct_enemy_hits: i64,
    pub max_health: i64,
    pub damage_event_list: Value,
    pub tdestroyed_modules: i64,
    pub health: i64,
    pub is_team_killer: bool,
    pub entity_captured: Value,
    pub kills: i64,
    pub in_battle_achievements: Vec<Value>,
    pub stop_respawn: bool,
    pub achievement_credits: i64,
    pub achievements: Vec<Value>,
    #[serde(rename = "xp/assist")]
    pub xp_assist: i64,
    pub shots: i64,
    pub rollouts_count: i64,
    pub damaged_hp: i64,
    pub flag_capture: i64,
    pub damaged: i64,
    pub is_first_blood: bool,
    #[serde(rename = "accountDBID")]
    pub account_dbid: i64,
    pub resource_absorbed: i64,
    pub credits: i64,
    pub artillery_fort_equip_damage_dealt: i64,
    pub no_damage_direct_hits_received: i64,
    pub num_defended: i64,
    pub stunned: i64,
    pub equipment_damage_dealt: i64,
    pub tdamage_dealt: i64,
    pub type_comp_descr: i64,
    pub solo_flag_capture: i64,
    pub destructibles_hits: i64,
    pub capturing_base: Value,
    pub damage_assisted_stun: i64,
    pub tkills: i64,
    pub potential_damage_received: i64,
    pub damage_received: i64,
    pub destructibles_num_destroyed: i64,
    pub damage_assisted_smoke: i64,
    pub destructibles_damage_dealt: i64,
    pub flag_actions: Vec<i64>,
    pub win_points: i64,
    pub explosion_hits: i64,
    pub team: i64,
    #[serde(rename = "xp/attack")]
    pub xp_attack: i64,
    pub death_count: i64,
    pub direct_hits: i64,
    pub damage_assisted_inspire: i64,
    pub poi_captured_by_own_team: i64,
    #[serde(rename = "achievementFreeXP")]
    pub achievement_free_xp: i64,
    pub stun_num: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Common {
    pub division: Value,
    pub finish_reason: i64,
    pub gui_type: i64,
    pub common_num_defended: i64,
    pub common_num_captured: i64,
    pub common_num_started: i64,
    pub arena_create_time: i64,
    pub common_num_destroyed: i64,
    pub winner_team: i64,
    pub team_health: TeamHealth,
    #[serde(rename = "arenaTypeID")]
    pub arena_type_id: i64,
    pub gas_attack_winner_team: i64,
    pub duration: i64,
    pub veh_lock_mode: i64,
    pub bonus_type: i64,
    pub bots: Value,
    pub account_comp_descr: Value,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct TeamHealth {
    #[serde(rename = "1")]
    pub n1: i64,
    #[serde(rename = "2")]
    pub n2: i64,
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Avatar {
    pub avatar_kills: i64,
    pub player_rank: i64,
    pub base_points_diff: i64,
    pub has_battle_pass: bool,
    pub avatar_damaged: i64,
    pub total_damaged: i64,
    pub bp_non_chapter_points_diff: i64,
    pub avatar_damage_dealt: i64,
    pub is_premature_leave: Option<bool>,
    pub sum_points: i64,
    pub fairplay_violations: Vec<i64>,
    pub badges: Vec<Vec<i64>>,
}

pub type PersonalMissionInfo = HashMap<String, Vec<i64>>;

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum IsAlive {
    False(bool),
    True(i64)
}

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct VehiclePerformance {
    pub frags: Option<i64>,
    #[serde(rename = "personalMissionIDs")]
    #[serde(default)]
    pub personal_mission_ids: Vec<Value>,
    pub wtr: Option<i64>,
    pub vehicle_type: Option<String>,
    pub is_alive: Option<IsAlive>,
    pub name: Option<String>,
    #[serde(default)]
    pub veh_post_progression: Vec<Value>,
    pub personal_mission_info: Option<PersonalMissionInfo>,
    pub forbid_in_battle_invitations: Option<bool>,
    pub fake_name: Option<String>,
    pub max_health: Option<i64>,
    pub igr_type: Option<i64>,
    pub clan_abbrev: Option<String>,
    pub ranked: Option<Vec<i64>>,
    pub badges: Option<Vec<Vec<i64>>>,
    pub custom_role_slot_type_id: Option<i64>,
    pub team: Option<i64>,
    pub events: Option<Value>,
    pub overridden_badge: Option<i64>,
    #[serde(rename = "avatarSessionID")]
    pub avatar_session_id: Option<String>,
    pub is_team_killer: Option<i64>,
}
